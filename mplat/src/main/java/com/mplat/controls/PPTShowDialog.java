/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mplat.controls;

import com.mplat.controls.dto.PPTMapDTO;
import com.mplat.util.ConfigUtils;
import com.mplat.util.FileUtils;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FilenameFilter;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.apache.commons.io.FilenameUtils;
import org.apache.commons.lang.StringUtils;

/**
 * @author Kitty
 */
public class PPTShowDialog extends javax.swing.JDialog {

    /* PPTKey */
    private final String ppt;
    private final String path;
    /* PPTMap */
    private final PPTMapDTO pptMap;
    /* PPT参数 */
    private int totalCount;
    private int current;

    /**
     * Creates new form PPTShowDialog
     */
    public PPTShowDialog(Frame parent, boolean modal, String ppt) {
        super(parent, modal);

        this.ppt = ppt;

        String root = ConfigUtils.findRootPath();
        this.path = FilenameUtils.normalizeNoEndSeparator(root + "/ppts/" + this.ppt);

        String tot = FilenameUtils.normalizeNoEndSeparator(this.path + "/tot.map");
        this.pptMap = new PPTMapDTO(tot);

        initComponents();

        this.initPptInfo();
        this.showPpt(this.current);

        this.initTextInfo();

        this.initKeyListener();
    }

    private void initPptInfo() {
        File pptpath = new File(this.path);
        String[] names = pptpath.list(new FilenameFilter() {
            public boolean accept(File dir, String name) {
                if (!StringUtils.startsWith(name, pptMap.getName())) {
                    return false;
                }
                if (!StringUtils.endsWith(name, pptMap.getFext())) {
                    return false;
                }

                return true;
            }
        });

        if (names != null) {
            this.totalCount = names.length;
        }

        this.current = 1;
    }

    private String findImagePath(int no) {
        return this.path + "/" + this.pptMap.getName() + no + "." + this.pptMap.getFext();
    }

    private void showPpt(final int no) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                String file = findImagePath(no);
                if (!FileUtils.exist(file)) {
                    JOptionPane.showMessageDialog(PPTShowDialog.this, "当前PPT不存在, PPT[" + ppt + "], No[" + no + "].", "PPT不存在", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                Image image = new ImageIcon(file).getImage();
                Dimension size = panelShow.getSize();
                panelShow.getGraphics().drawImage(image, 0, 0, (int) size.getWidth(), (int) size.getHeight(), PPTShowDialog.this);
            }
        });
    }

    private void initTextInfo() {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                textTotal.setText("总共" + totalCount + "张");
                textCurrent.setText("当前第" + current + "张");
            }
        });
    }

    private void initKeyListener() {
        this.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                int code = evt.getKeyCode();
                if (code == KeyEvent.VK_HOME) {
                    showFirstPPT();
                } else if (code == KeyEvent.VK_END) {
                    showLastPPT();
                } else if (code == KeyEvent.VK_LEFT || code == KeyEvent.VK_UP) {
                    showPreviousPPT();
                } else if (code == KeyEvent.VK_RIGHT || code == KeyEvent.VK_DOWN) {
                    showNextPPT();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCtl = new javax.swing.JPanel();
        textTotal = new javax.swing.JLabel();
        textCurrent = new javax.swing.JLabel();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        panelShow = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PPT播放器");

        panelCtl.setBackground(new java.awt.Color(204, 255, 255));

        textTotal.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        textTotal.setText("总共20张");

        textCurrent.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        textCurrent.setText("当前第10张");

        btnFirst.setText("第一张");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPrevious.setText("前一张");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnNext.setText("下一张");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setText("最后一张");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCtlLayout = new javax.swing.GroupLayout(panelCtl);
        panelCtl.setLayout(panelCtlLayout);
        panelCtlLayout.setHorizontalGroup(
            panelCtlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCtlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCtlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCtlLayout.setVerticalGroup(
            panelCtlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCtlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textCurrent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrevious)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLast)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        panelShow.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                onPanelShowResizedEvent(evt);
            }
        });

        javax.swing.GroupLayout panelShowLayout = new javax.swing.GroupLayout(panelShow);
        panelShow.setLayout(panelShowLayout);
        panelShowLayout.setHorizontalGroup(
            panelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );
        panelShowLayout.setVerticalGroup(
            panelShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCtl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCtl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showFirstPPT() {
        this.showPpt(1);
        this.current = 1;
        this.initTextInfo();
    }

    private void showPreviousPPT() {
        int no = (this.current - 1);
        no = (no > 0 ? no : 1);

        this.showPpt(no);
        this.current = no;
        this.initTextInfo();
    }

    private void showNextPPT() {
        int no = (this.current + 1);
        no = (no <= this.totalCount ? no : this.totalCount);

        this.showPpt(no);
        this.current = no;
        this.initTextInfo();
    }

    private void showLastPPT() {
        int no = this.totalCount;

        this.showPpt(no);
        this.current = no;
        this.initTextInfo();
    }

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.showFirstPPT();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        this.showPreviousPPT();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.showNextPPT();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.showLastPPT();
    }//GEN-LAST:event_btnLastActionPerformed

    private void onPanelShowResizedEvent(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_onPanelShowResizedEvent
        this.showPpt(this.current);
    }//GEN-LAST:event_onPanelShowResizedEvent
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JPanel panelCtl;
    private javax.swing.JPanel panelShow;
    private javax.swing.JLabel textCurrent;
    private javax.swing.JLabel textTotal;
    // End of variables declaration//GEN-END:variables
}
